import type { Request } from "express";
import { Profile } from "passport";
import { Strategy } from "passport-strategy";
interface DoneFunction {
    (error: unknown, user?: unknown, msg?: string): void;
}
declare type VerifyFunction = (profile: Profile, done: DoneFunction) => void;
declare type VerifyFunctionWithRequest = (req: Request, profile: Profile, done: DoneFunction) => void;
interface GoogleOneTapStrategyOptionBase {
    clientID?: string;
    clientSecret?: string;
    redirectUri?: string;
    verifyCsrfToken?: boolean;
}
interface GoogleOneTapStrategyOption extends GoogleOneTapStrategyOptionBase {
    passReqToCallback?: false;
}
interface GoogleOneTapStrategyOptionWithRequest extends GoogleOneTapStrategyOptionBase {
    passReqToCallback: true;
}
export declare class GoogleOneTapStrategy extends Strategy {
    name: string;
    private readonly options;
    private readonly client;
    private readonly verify;
    constructor(verify: VerifyFunction);
    constructor(options: GoogleOneTapStrategyOption, verify: VerifyFunction);
    constructor(options: GoogleOneTapStrategyOptionWithRequest, verify: VerifyFunctionWithRequest);
    authenticate(req: Request): void;
    private isCsrfValid;
    private verifyToken;
}
export {};
//# sourceMappingURL=index.d.ts.map